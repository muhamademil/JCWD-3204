// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id Int @id @default(autoincrement())
  name String
  email String @unique
  password String
  role Role?
  position String
  departement String
  attadance Attendance[]
  leaves Leave[]
  payslips Payslip[]
  createdAt DateTime @default(now())
  updatedAt DateTime? @default(now())


}

model Attendance{
  id Int @id @default(autoincrement())
  userId Int
  date DateTime
  clockIn DateTime?
  clockOut DateTime?
  isApproved Boolean @default(false)
  user User @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime? @default(now())
}

model Leave{
  id Int @id @default(autoincrement())
  userId Int
  type LeaveType
  startDate DateTime
  endDate DateTime
  status LeaveStatus
  user User @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime? @default(now())
}

model Payslip{
  id Int @id @default(autoincrement())
  userId Int
  month Int
  year Int
  salary Float
  fileUrl String?
  user User @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime? @default(now())
}

enum Role {
  HR
  EMPLOYEE
}

enum LeaveType{
  SICK
  REGULER
  OTHERS
}

enum LeaveStatus{
  PENDING
  APPROVED
  REJECTED
}